(deftheme whirm
  "Created 2016-07-13.")

(custom-theme-set-faces
 'whirm
 '(company-template-field ((t (:background "yellow4" :foreground "black"))))
 '(org-mode-line-clock ((t (:foreground "red" :box (:line-width -1 :style released-button)))))
 '(vhl/default-face ((t (:inherit nil :background "#20203b"))))
 '(mu4e-cited-1-face ((t (:inherit font-lock-builtin-face :weight normal))))
 '(mu4e-cited-2-face ((t (:inherit font-lock-type-face :weight normal))))
 '(mu4e-cited-3-face ((t (:inherit font-lock-variable-name-face :weight normal))))
 '(mu4e-cited-4-face ((t (:inherit font-lock-pseudo-keyword-face :weight normal))))
 '(mu4e-header-highlight-face ((t (:underline "gray38"))))
 '(mu4e-moved-face ((t (:inherit font-lock-comment-face))))
 '(mu4e-system-face ((t (:inherit font-lock-comment-face))))
 '(mu4e-unread-face ((t (:foreground "RoyalBlue2" :weight bold))))
 '(button ((t (:inherit (link)))))
 '(column-marker-1 ((t (:background "#250000"))))
 '(company-preview ((t (:background "gray22" :foreground "wheat"))))
 '(company-preview-common ((t (:inherit company-preview :foreground "dark khaki"))))
 '(company-scrollbar-bg ((t (:inherit company-tooltip :background "gray32"))))
 '(company-tooltip ((t (:background "gray34"))))
 '(company-tooltip-annotation ((t (:inherit company-tooltip :foreground "PaleTurquoise2"))))
 '(company-tooltip-common ((t (:inherit company-tooltip :foreground "yellow3"))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :foreground "dark khaki"))))
 '(company-tooltip-selection ((t (:inherit company-tooltip :background "dark slate gray"))))
 '(cursor ((((background light)) (:background "black")) (((background dark)) (:background "white"))))
 '(default ((t (:family "Terminus" :foundry "xos4" :width normal :height 92 :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :inverse-video nil :foreground "#D2DEC4" :background "#191717" :stipple nil :inherit nil))))
 '(diff-refine-added ((t (:inherit diff-refine-change :background "#225522"))))
 '(diff-refine-removed ((t (:inherit diff-refine-change :background "#552222"))))
 '(diredp-file-name ((t (:foreground "gainsboro"))))
 '(diredp-file-suffix ((t (:foreground "dark gray"))))
 '(diredp-ignored-file-name ((t (:foreground "dim gray"))))
 '(error ((t (:foreground "firebrick" :weight bold))))
 '(escape-glyph ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(fic-author-face ((t (:foreground "OrangeRed4"))))
 '(fic-face ((t (:background "gray22" :foreground "tomato2" :weight bold))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(flycheck-error ((t (:underline "dark red"))))
 '(flycheck-fringe-warning ((t (:foreground "Orange4"))))
 '(flycheck-info ((t (:underline "dark slate gray"))))
 '(flycheck-warning ((t (:underline "DarkOrange4"))))
 '(flyspell-duplicate ((t (:underline (:color "sienna2" :style wave)))))
 '(flyspell-incorrect ((t (:underline (:color "tomato2" :style wave) :weight bold))))
 '(font-lock-builtin-face ((((class grayscale) (background light)) (:weight bold :foreground "LightGray")) (((class grayscale) (background dark)) (:weight bold :foreground "DimGray")) (((class color) (min-colors 88) (background light)) (:foreground "dark slate blue")) (((class color) (min-colors 88) (background dark)) (:foreground "LightSteelBlue")) (((class color) (min-colors 16) (background light)) (:foreground "Orchid")) (((class color) (min-colors 16) (background dark)) (:foreground "LightSteelBlue")) (((class color) (min-colors 8)) (:weight bold :foreground "blue")) (t (:weight bold))))
 '(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 '(font-lock-comment-face ((t (:foreground "#666f75"))))
 '(font-lock-comment-face ((t (:foreground "#666f75"))))
 '(font-lock-constant-face ((((class grayscale) (background light)) (:underline (:color foreground-color :style line) :weight bold :foreground "LightGray")) (((class grayscale) (background dark)) (:underline (:color foreground-color :style line) :weight bold :foreground "Gray50")) (((class color) (min-colors 88) (background light)) (:foreground "dark cyan")) (((class color) (min-colors 88) (background dark)) (:foreground "Aquamarine")) (((class color) (min-colors 16) (background light)) (:foreground "CadetBlue")) (((class color) (min-colors 16) (background dark)) (:foreground "Aquamarine")) (((class color) (min-colors 8)) (:foreground "magenta")) (t (:underline (:color foreground-color :style line) :weight bold))))
 '(font-lock-doc-face ((t (:inherit (font-lock-string-face)))))
 '(font-lock-function-name-face ((((class color) (min-colors 88) (background light)) (:foreground "Blue1")) (((class color) (min-colors 88) (background dark)) (:foreground "LightSkyBlue")) (((class color) (min-colors 16) (background light)) (:foreground "Blue")) (((class color) (min-colors 16) (background dark)) (:foreground "LightSkyBlue")) (((class color) (min-colors 8)) (:weight bold :foreground "blue")) (t (:weight bold :inverse-video t))))
 '(font-lock-keyword-face ((((class grayscale) (background light)) (:weight bold :foreground "LightGray")) (((class grayscale) (background dark)) (:weight bold :foreground "DimGray")) (((class color) (min-colors 88) (background light)) (:foreground "Purple")) (((class color) (min-colors 88) (background dark)) (:foreground "Cyan1")) (((class color) (min-colors 16) (background light)) (:foreground "Purple")) (((class color) (min-colors 16) (background dark)) (:foreground "Cyan")) (((class color) (min-colors 8)) (:weight bold :foreground "cyan")) (t (:weight bold))))
 '(font-lock-negation-char-face ((t nil)))
 '(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 '(font-lock-string-face ((((class grayscale) (background light)) (:slant italic :foreground "DimGray")) (((class grayscale) (background dark)) (:slant italic :foreground "LightGray")) (((class color) (min-colors 88) (background light)) (:foreground "VioletRed4")) (((class color) (min-colors 88) (background dark)) (:foreground "LightSalmon")) (((class color) (min-colors 16) (background light)) (:foreground "RosyBrown")) (((class color) (min-colors 16) (background dark)) (:foreground "LightSalmon")) (((class color) (min-colors 8)) (:foreground "green")) (t (:slant italic))))
 '(font-lock-type-face ((((class grayscale) (background light)) (:weight bold :foreground "Gray90")) (((class grayscale) (background dark)) (:weight bold :foreground "DimGray")) (((class color) (min-colors 88) (background light)) (:foreground "ForestGreen")) (((class color) (min-colors 88) (background dark)) (:foreground "PaleGreen")) (((class color) (min-colors 16) (background light)) (:foreground "ForestGreen")) (((class color) (min-colors 16) (background dark)) (:foreground "PaleGreen")) (((class color) (min-colors 8)) (:foreground "green")) (t (:underline (:color foreground-color :style line) :weight bold))))
 '(font-lock-variable-name-face ((((class grayscale) (background light)) (:slant italic :weight bold :foreground "Gray90")) (((class grayscale) (background dark)) (:slant italic :weight bold :foreground "DimGray")) (((class color) (min-colors 88) (background light)) (:foreground "sienna")) (((class color) (min-colors 88) (background dark)) (:foreground "LightGoldenrod")) (((class color) (min-colors 16) (background light)) (:foreground "DarkGoldenrod")) (((class color) (min-colors 16) (background dark)) (:foreground "LightGoldenrod")) (((class color) (min-colors 8)) (:weight light :foreground "yellow")) (t (:slant italic :weight bold))))
 '(font-lock-warning-face ((t (:foreground "dark orange" :inherit (error)))))
 '(font-lock-warning-face ((t (:inherit error :foreground "dark orange"))))
 '(fringe ((t (:background "gray17"))))
 '(fringe ((t (:background "gray17"))))
 '(git-gutter-fr:added ((t (:foreground "#256b64"))))
 '(git-gutter-fr:deleted ((t (:foreground "#8b0000"))))
 '(git-gutter-fr:modified ((t (:foreground "gray12"))))
 '(header-line ((default (:inherit (mode-line))) (((type tty)) (:underline (:color foreground-color :style line) :inverse-video nil)) (((class color grayscale) (background light)) (:box nil :foreground "grey20" :background "grey90")) (((class color grayscale) (background dark)) (:box nil :foreground "grey90" :background "grey20")) (((class mono) (background light)) (:underline (:color foreground-color :style line) :box nil :inverse-video nil :foreground "black" :background "white")) (((class mono) (background dark)) (:underline (:color foreground-color :style line) :box nil :inverse-video nil :foreground "white" :background "black"))))
 '(helm-ff-directory ((t (:foreground "steel blue"))))
 '(helm-ff-prefix ((t (:background "gray12" :foreground "tomato4"))))
 '(helm-ff-symlink ((t (:foreground "DeepSkyBlue3"))))
 '(helm-grep-finish ((t (:foreground "chartreuse3"))))
 '(helm-selection ((t (:background "#3a4a4a"))))
 '(helm-source-header ((t (:background "gray18" :weight bold))))
 '(highlight ((((class color) (min-colors 88) (background light)) (:background "darkseagreen2")) (((class color) (min-colors 88) (background dark)) (:background "darkolivegreen")) (((class color) (min-colors 16) (background light)) (:background "darkseagreen2")) (((class color) (min-colors 16) (background dark)) (:background "darkolivegreen")) (((class color) (min-colors 8)) (:foreground "black" :background "green")) (t (:inverse-video t))))
 '(highlight-indentation-current-column-face ((t (:inherit fringe :background "maroon4"))))
 '(hydra-face-red ((t (:foreground "dark red" :weight bold))))
 '(isearch ((((class color) (min-colors 88) (background light)) (:foreground "lightskyblue1" :background "magenta3")) (((class color) (min-colors 88) (background dark)) (:foreground "brown4" :background "palevioletred2")) (((class color) (min-colors 16)) (:foreground "cyan1" :background "magenta4")) (((class color) (min-colors 8)) (:foreground "cyan1" :background "magenta4")) (t (:inverse-video t))))
 '(isearch-fail ((((class color) (min-colors 88) (background light)) (:background "RosyBrown1")) (((class color) (min-colors 88) (background dark)) (:background "red4")) (((class color) (min-colors 16)) (:background "red")) (((class color) (min-colors 8)) (:background "red")) (((class color grayscale)) (:foreground "grey")) (t (:inverse-video t))))
 '(lazy-highlight ((((class color) (min-colors 88) (background light)) (:background "paleturquoise")) (((class color) (min-colors 88) (background dark)) (:background "paleturquoise4")) (((class color) (min-colors 16)) (:background "turquoise3")) (((class color) (min-colors 8)) (:background "turquoise3")) (t (:underline (:color foreground-color :style line)))))
 '(link ((t (:foreground "Cyan3" :underline t))))
 '(link ((t (:underline (:color foreground-color :style line) :foreground "Cyan3"))))
 '(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground "magenta4")) (((class color) (background dark)) (:foreground "violet"))))
 '(match ((t (:background "midnight blue"))))
 '(match ((t (:background "midnight blue"))))
 '(minibuffer-prompt ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "medium blue"))))
 '(mode-line ((t (:inverse-video nil :foreground "gray60" :background "black"))))
 '(mode-line-buffer-id ((t (:inherit (sml/filename)))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(mode-line-highlight ((((class color) (min-colors 88)) (:box (:line-width 2 :color "grey40" :style released-button))) (t (:inherit (highlight)))))
 '(mode-line-inactive ((t (:inverse-video nil :foreground "gray60" :background "#404045"))))
 '(next-error ((t (:inherit (region)))))
 '(org-mode-line-clock ((t (:foreground "red" :box (:line-width -1 :style released-button)))))
 '(org-tag ((t (:foreground "gray26" :box (:line-width 1 :color "gray22") :weight bold))))
 '(outline-4 ((t (:inherit font-lock-comment-face :foreground "Lightskyblue3"))))
 '(query-replace ((t (:inherit (isearch)))))
 '(realgud-overlay-arrow1 ((t (:foreground "Firebrick1" :weight bold))))
 '(realgud-overlay-arrow2 ((t (:foreground "firebrick4" :weight bold))))
 '(realgud-overlay-arrow3 ((t (:foreground "IndianRed4" :weight bold))))
 '(region ((((class color) (min-colors 88) (background dark)) (:background "blue3")) (((class color) (min-colors 88) (background light) (type gtk)) (:background "gtk_selection_bg_color" :distant-foreground "gtk_selection_fg_color")) (((class color) (min-colors 88) (background light) (type ns)) (:background "ns_selection_bg_color" :distant-foreground "ns_selection_fg_color")) (((class color) (min-colors 88) (background light)) (:background "lightgoldenrod2")) (((class color) (min-colors 16) (background dark)) (:background "blue3")) (((class color) (min-colors 16) (background light)) (:background "lightgoldenrod2")) (((class color) (min-colors 8)) (:foreground "white" :background "blue")) (((type tty) (class mono)) (:inverse-video t)) (t (:background "gray"))))
 '(secondary-selection ((((class color) (min-colors 88) (background light)) (:background "yellow1")) (((class color) (min-colors 88) (background dark)) (:background "SkyBlue4")) (((class color) (min-colors 16) (background light)) (:background "yellow")) (((class color) (min-colors 16) (background dark)) (:background "SkyBlue4")) (((class color) (min-colors 8)) (:foreground "black" :background "cyan")) (t (:inverse-video t))))
 '(shadow ((((class color grayscale) (min-colors 88) (background light)) (:foreground "grey50")) (((class color grayscale) (min-colors 88) (background dark)) (:foreground "grey70")) (((class color) (min-colors 8) (background light)) (:foreground "green")) (((class color) (min-colors 8) (background dark)) (:foreground "yellow"))))
 '(success ((t (:foreground "green4" :weight bold))))
 '(tooltip ((((class color)) (:inherit (variable-pitch) :foreground "black" :background "lightyellow")) (t (:inherit (variable-pitch)))))
 '(trailing-whitespace ((((class color) (background light)) (:background "red1")) (((class color) (background dark)) (:background "red1")) (t (:inverse-video t))))
 '(variable-pitch ((t (:family "Terminus"))))
 '(variable-pitch ((t (:family "Terminus"))))
 '(vertical-border ((t (:foreground "#191717"))))
 '(yascroll:thumb-fringe ((t (:background "RoyalBlue4" :foreground "RoyalBlue4"))))
 '(default ((t (:inherit nil :stipple nil :background "#191717" :foreground "#D2DEC4" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :width normal :family "Terminus")))))

(provide-theme 'whirm)
